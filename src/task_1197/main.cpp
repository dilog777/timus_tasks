/*
Условие этой задачи очень простое: вам всего лишь надо определить, сколько клеток 
находится под боем шахматного коня, одиноко стоящего на шахматной доске. На всякий 
случай напомним, что конь ходит буквой «Г» — на две клетки по горизонтали или вертикали 
в любом направлении, и потом на одну клетку в направлении, перпендикулярном первоначальному.

Исходные данные
В первой строке находится единственное число N, 1 ≤ N ≤ 64 — количество тестов. В каждой 
из последующих N строк содержится очередной тест: два символа (маленькая латинская буква 
от 'a' до 'h' и цифра от 1 до 8) — стандартное шахматное обозначение клетки, на которой 
стоит конь. При этом буква обозначает вертикаль, а цифра — горизонталь.

Результат
Выведите N строк: в каждой из них должно находиться единственное число — количество клеток 
шахматной доски, находящихся под боем коня. 

Пример
исходные данные		результат
3					2
a1					8
d4					6
g6					

*/

#include <iostream>
#include <list>


static const int horseMoves[8][8] = {
2, 3, 4, 4, 4, 4, 3, 2,
3, 4, 6, 6, 6, 6, 4, 3,
4, 6, 8, 8, 8, 8, 6, 4,
4, 6, 8, 8, 8, 8, 6, 4,
4, 6, 8, 8, 8, 8, 6, 4,
4, 6, 8, 8, 8, 8, 6, 4,
3, 4, 6, 6, 6, 6, 4, 3,
2, 3, 4, 4, 4, 4, 3, 2,
};



struct Position
{
	static const int sizeX = 8;
	static const int sizeY = 8;
	
	int x{ -1 };
	int y{ -1 };

	bool isValid() const
	{
		return (x >= 0 && x < sizeX && y >= 0 && y < sizeY);
	}
};



Position position(const std::string& str)
{
	if (str.size() != 2)
		return {};

	int x = str[0] - 'a';
	int y = str[1] - '1';
	return Position{ x, y };
}



int main()
{
	int n;
	std::cin >> n;

	std::string str;
	std::list<int> movesList;
	for (;n > 0; --n)
	{
		std::cin >> str;
		auto pos = position(str);
		if (pos.isValid())
		{
			auto moves = horseMoves[pos.x][pos.y];
			movesList.push_back(moves);
		}
	}

	for (const auto &moves : movesList)
		std::cout << moves << std::endl;

	return 0;
}
